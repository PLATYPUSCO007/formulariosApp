{"ast":null,"code":"import { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/shared/services/validator.service\";\nimport * as i3 from \"src/app/shared/services/async-email-validator.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction RegistroComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" El nombre debe contener nombre y apellido. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegistroComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Debe contener formato de email. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegistroComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Los email's no coinciden \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegistroComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" El Nickname no es valido \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegistroComponent_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" La contrse\\u00F1a debe contener al menos 6 caracteres \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegistroComponent_span_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as no coinciden \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class RegistroComponent {\n  constructor(fb, _serValidator, _serEamilValidator) {\n    this.fb = fb;\n    this._serValidator = _serValidator;\n    this._serEamilValidator = _serEamilValidator;\n    this.miFormulario = this.fb.group({\n      nombre: ['', [Validators.required, Validators.pattern(this._serValidator.patternName)]],\n      email: ['', [Validators.required, Validators.pattern(this._serValidator.patternEmail)], [this._serEamilValidator]],\n      confirm_email: ['', [Validators.required]],\n      username: ['', [Validators.required, this._serValidator.noPlatypuscoValid]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirm_password: ['', [Validators.required]]\n    }, {\n      validators: [this._serValidator.equalValues('password', 'confirm_password'), this._serValidator.equalValues('email', 'confirm_email')]\n    });\n  }\n\n  ngOnInit() {\n    this.miFormulario.reset({\n      email: 'test1@gmail.com'\n    });\n  }\n\n  campoNoValido(campo) {\n    return this.miFormulario.get(campo)?.invalid && this.miFormulario.get(campo)?.touched;\n  }\n\n  envioFormulario() {\n    console.log(this.miFormulario.value);\n    this.miFormulario.markAllAsTouched();\n  }\n\n}\n\nRegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n  return new (t || RegistroComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ValidatorService), i0.ɵɵdirectiveInject(i3.AsyncEmailValidatorService));\n};\n\nRegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistroComponent,\n  selectors: [[\"app-registro\"]],\n  decls: 71,\n  vars: 24,\n  consts: [[1, \"row\"], [1, \"col\", \"mb-5\"], [1, \"row\", \"justify-content-center\", \"mb-3\"], [1, \"col-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [\"for\", \"\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"placeholder\", \"Nombre y apellidos\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"email\", \"placeholder\", \"Ingrese su Email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"email\", \"placeholder\", \"Confirme su Email\", \"formControlName\", \"confirm_email\", 1, \"form-control\"], [1, \"col\", \"sm-9\"], [\"type\", \"text\", \"placeholder\", \"Ingrese su Nickname\", \"formControlName\", \"username\", 1, \"form-control\"], [1, \"col\", \"sm\", \"9\"], [\"type\", \"password\", \"placeholder\", \"Ingrese la contrase\\u00F1a\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"password\", \"placeholder\", \"Confirme la contrse\\u00F1a\", \"formControlName\", \"confirm_password\", 1, \"form-control\"], [1, \"col\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"float-end\", 3, \"disabled\"], [1, \"form-text\", \"text-danger\"]],\n  template: function RegistroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\");\n      i0.ɵɵtext(5, \"Registro\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistroComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.envioFormulario();\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"input\", 8);\n      i0.ɵɵtemplate(12, RegistroComponent_span_12_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 7);\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵtemplate(18, RegistroComponent_span_18_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 6);\n      i0.ɵɵtext(21, \"Confirme su Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 7);\n      i0.ɵɵelement(23, \"input\", 11);\n      i0.ɵɵtemplate(24, RegistroComponent_span_24_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 6);\n      i0.ɵɵtext(27, \"Nickname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 12);\n      i0.ɵɵelement(29, \"input\", 13);\n      i0.ɵɵtemplate(30, RegistroComponent_span_30_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 5)(32, \"label\", 6);\n      i0.ɵɵtext(33, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 14);\n      i0.ɵɵelement(35, \"input\", 15);\n      i0.ɵɵtemplate(36, RegistroComponent_span_36_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"div\", 5)(38, \"label\", 6);\n      i0.ɵɵtext(39, \"Confirmar Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 12);\n      i0.ɵɵelement(41, \"input\", 16);\n      i0.ɵɵtemplate(42, RegistroComponent_span_42_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"div\", 0)(44, \"div\", 17)(45, \"button\", 18);\n      i0.ɵɵtext(46, \" Crear \");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(47, \"h2\");\n      i0.ɵɵtext(48, \"FormErrors:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"pre\");\n      i0.ɵɵtext(50);\n      i0.ɵɵpipe(51, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"h2\");\n      i0.ɵɵtext(53, \"Form Pending:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"pre\");\n      i0.ɵɵtext(55);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"h2\");\n      i0.ɵɵtext(57);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"h2\");\n      i0.ɵɵtext(59);\n      i0.ɵɵpipe(60, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"h2\");\n      i0.ɵɵtext(62);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"h2\");\n      i0.ɵɵtext(64);\n      i0.ɵɵpipe(65, \"json\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"h2\");\n      i0.ɵɵtext(67);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(68, \"h2\");\n      i0.ɵɵtext(69);\n      i0.ɵɵpipe(70, \"json\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.miFormulario);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"nombre\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"email\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"confirm_email\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"username\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"password\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.campoNoValido(\"confirm_password\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.miFormulario.pending);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(51, 16, ctx.miFormulario.errors));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.miFormulario.pending);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"FormValid: \", ctx.miFormulario.valid, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Nombre: \", i0.ɵɵpipeBind1(60, 18, ctx.miFormulario.controls[\"nombre\"].errors), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"FormValid: \", ctx.miFormulario.valid, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Email: \", i0.ɵɵpipeBind1(65, 20, ctx.miFormulario.controls[\"email\"].errors), \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"FormValid: \", ctx.miFormulario.valid, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"NickName: \", i0.ɵɵpipeBind1(70, 22, ctx.miFormulario.controls[\"username\"].errors), \"\");\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.JsonPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Ryby5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAgE,gBAAhE;;;;;;;;;ICmBoBC;IAEIA;IACJA;;;;;;IAaAA;IAEIA;IACJA;;;;;;IAaAA;IAEIA;IACJA;;;;;;IAaAA;IAEIA;IACJA;;;;;;IAaAA;IAEIA;IACJA;;;;;;IAaAA;IAEIA;IACJA;;;;AD5FpB,OAAM,MAAOC,iBAAP,CAAwB;EAa5BC,YAAoBC,EAApB,EACoBC,aADpB,EAEoBC,kBAFpB,EAEkE;IAF9C;IACA;IACA;IAbpB,oBAA0B,KAAKF,EAAL,CAAQG,KAAR,CAAc;MACtCC,MAAM,EAAE,CAAC,EAAD,EAAK,CAACR,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACU,OAAX,CAAmB,KAAKL,aAAL,CAAmBM,WAAtC,CAAtB,CAAL,CAD8B;MAEtCC,KAAK,EAAE,CAAC,EAAD,EAAK,CAACZ,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACU,OAAX,CAAmB,KAAKL,aAAL,CAAmBQ,YAAtC,CAAtB,CAAL,EAAiF,CAAC,KAAKP,kBAAN,CAAjF,CAF+B;MAGtCQ,aAAa,EAAE,CAAC,EAAD,EAAK,CAACd,UAAU,CAACS,QAAZ,CAAL,CAHuB;MAItCM,QAAQ,EAAE,CAAC,EAAD,EAAK,CAACf,UAAU,CAACS,QAAZ,EAAsB,KAAKJ,aAAL,CAAmBW,iBAAzC,CAAL,CAJ4B;MAKtCC,QAAQ,EAAE,CAAC,EAAD,EAAK,CAACjB,UAAU,CAACS,QAAZ,EAAsBT,UAAU,CAACkB,SAAX,CAAqB,CAArB,CAAtB,CAAL,CAL4B;MAMtCC,gBAAgB,EAAE,CAAC,EAAD,EAAK,CAACnB,UAAU,CAACS,QAAZ,CAAL;IANoB,CAAd,EAOxB;MACAW,UAAU,EAAE,CAAC,KAAKf,aAAL,CAAmBgB,WAAnB,CAA+B,UAA/B,EAA2C,kBAA3C,CAAD,EAAiE,KAAKhB,aAAL,CAAmBgB,WAAnB,CAA+B,OAA/B,EAAwC,eAAxC,CAAjE;IADZ,CAPwB,CAA1B;EAauE;;EAEvEC,QAAQ;IACN,KAAKC,YAAL,CAAkBC,KAAlB,CAAwB;MACtBZ,KAAK,EAAE;IADe,CAAxB;EAGD;;EAEDa,aAAa,CAACC,KAAD,EAAc;IACzB,OAAQ,KAAKH,YAAL,CAAkBI,GAAlB,CAAsBD,KAAtB,GAA8BE,OAA9B,IAAyC,KAAKL,YAAL,CAAkBI,GAAlB,CAAsBD,KAAtB,GAA8BG,OAA/E;EACD;;EAEDC,eAAe;IACbC,OAAO,CAACC,GAAR,CAAY,KAAKT,YAAL,CAAkBU,KAA9B;IAEA,KAAKV,YAAL,CAAkBW,gBAAlB;EACD;;AA/B2B;;;mBAAjBhC,mBAAiBD;AAAA;;;QAAjBC;EAAiBiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BtC,+BAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,KAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,IAAjB;MAKoBA;MAAQA;MAIpBA;MAAiCA;QAAA,OAAYuC,qBAAZ;MAA6B,CAA7B;MAE7BvC,+BAAsB,CAAtB,EAAsB,OAAtB,EAAsB,CAAtB;MACkDA;MAAMA;MACpDA;MACIA;MAMAA;MAIJA;MAGJA,gCAAsB,EAAtB,EAAsB,OAAtB,EAAsB,CAAtB;MACkDA;MAAKA;MACnDA;MACIA;MAMAA;MAIJA;MAGJA,gCAAsB,EAAtB,EAAsB,OAAtB,EAAsB,CAAtB;MACkDA;MAAiBA;MAC/DA;MACIA;MAMAA;MAIJA;MAGJA,gCAAsB,EAAtB,EAAsB,OAAtB,EAAsB,CAAtB;MACkDA;MAAQA;MACtDA;MACIA;MAMAA;MAIJA;MAGJA,gCAAsB,EAAtB,EAAsB,OAAtB,EAAsB,CAAtB;MACkDA;MAAQA;MACtDA;MACIA;MAMAA;MAIJA;MAGJA,gCAAsB,EAAtB,EAAsB,OAAtB,EAAsB,CAAtB;MACkDA;MAAkBA;MAChEA;MACIA;MAMAA;MAIJA;MAGJA,gCAAiB,EAAjB,EAAiB,KAAjB,EAAiB,EAAjB,EAAiB,EAAjB,EAAiB,QAAjB,EAAiB,EAAjB;MAKYA;MACJA;MAQpBA;MAAIA;MAAWA;MACfA;MAAKA;;MAA8BA;MAEnCA;MAAIA;MAAaA;MACjBA;MAAKA;MAAwBA;MAE7BA;MAAIA;MAAiCA;MACrCA;MAAIA;;MAAyDA;MAE7DA;MAAIA;MAAiCA;MACrCA;MAAIA;;MAAuDA;MAE3DA;MAAIA;MAAiCA;MACrCA;MAAIA;;MAA6DA;;;;MA7HnDA;MAAAA;MAYWA;MAAAA;MAgBAA;MAAAA;MAgBAA;MAAAA;MAgBAA;MAAAA;MAgBAA;MAAAA;MAgBAA;MAAAA;MAUDA;MAAAA;MAWnBA;MAAAA;MAGAA;MAAAA;MAEDA;MAAAA;MACAA;MAAAA;MAEAA;MAAAA;MACAA;MAAAA;MAEAA;MAAAA;MACAA;MAAAA","names":["FormBuilder","FormGroup","Validators","i0","RegistroComponent","constructor","fb","_serValidator","_serEamilValidator","group","nombre","required","pattern","patternName","email","patternEmail","confirm_email","username","noPlatypuscoValid","password","minLength","confirm_password","validators","equalValues","ngOnInit","miFormulario","reset","campoNoValido","campo","get","invalid","touched","envioFormulario","console","log","value","markAllAsTouched","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\william.enciso\\Documents\\Proyectos\\Angular\\formulariosApp\\src\\app\\auth\\registro\\registro.component.ts","C:\\Users\\william.enciso\\Documents\\Proyectos\\Angular\\formulariosApp\\src\\app\\auth\\registro\\registro.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { AsyncEmailValidatorService } from 'src/app/shared/services/async-email-validator.service';\nimport { ValidatorService } from 'src/app/shared/services/validator.service';\n\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})\nexport class RegistroComponent implements OnInit {\n\n  miFormulario: FormGroup = this.fb.group({\n    nombre: ['', [Validators.required, Validators.pattern(this._serValidator.patternName)]],\n    email: ['', [Validators.required, Validators.pattern(this._serValidator.patternEmail)], [this._serEamilValidator]],\n    confirm_email: ['', [Validators.required]],\n    username: ['', [Validators.required, this._serValidator.noPlatypuscoValid ]],\n    password: ['', [Validators.required, Validators.minLength(6)]],\n    confirm_password: ['', [Validators.required]],\n  },{\n    validators: [this._serValidator.equalValues('password', 'confirm_password'), this._serValidator.equalValues('email', 'confirm_email')]\n  });\n\n  constructor(private fb: FormBuilder,\n              private _serValidator: ValidatorService,\n              private _serEamilValidator: AsyncEmailValidatorService) { }\n\n  ngOnInit(): void {\n    this.miFormulario.reset({\n      email: 'test1@gmail.com'\n    })\n  }\n  \n  campoNoValido(campo: string){\n    return (this.miFormulario.get(campo)?.invalid && this.miFormulario.get(campo)?.touched);\n  }\n\n  envioFormulario(){\n    console.log(this.miFormulario.value);\n    \n    this.miFormulario.markAllAsTouched();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col mb-5\">\n\n        <div class=\"row justify-content-center mb-3\">\n            <div class=\"col-4\">\n                <h1>Registro</h1>\n            </div>\n        </div>\n\n        <form [formGroup]=\"miFormulario\" (ngSubmit)=\"envioFormulario()\">\n\n            <div class=\"row mb-3\">\n                <label for=\"\" class=\"col-sm-3 col-form-label\">Nombre</label>\n                <div class=\"col-sm-9\">\n                    <input \n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"Nombre y apellidos\"\n                        formControlName=\"nombre\">\n\n                    <span class=\"form-text text-danger\"\n                        *ngIf=\"campoNoValido('nombre')\">\n                        El nombre debe contener nombre y apellido.\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"row mb-3\">\n                <label for=\"\" class=\"col-sm-3 col-form-label\">Email</label>\n                <div class=\"col-sm-9\">\n                    <input \n                        type=\"email\"\n                        class=\"form-control\"\n                        placeholder=\"Ingrese su Email\"\n                        formControlName=\"email\">\n\n                    <span class=\"form-text text-danger\"\n                        *ngIf=\"campoNoValido('email')\">\n                        Debe contener formato de email.\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"row mb-3\">\n                <label for=\"\" class=\"col-sm-3 col-form-label\">Confirme su Email</label>\n                <div class=\"col-sm-9\">\n                    <input \n                        type=\"email\"\n                        class=\"form-control\"\n                        placeholder=\"Confirme su Email\"\n                        formControlName=\"confirm_email\">\n                    \n                    <span class=\"form-text text-danger\"\n                        *ngIf=\"campoNoValido('confirm_email')\">\n                        Los email's no coinciden\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"row mb-3\">\n                <label for=\"\" class=\"col-sm-3 col-form-label\">Nickname</label>\n                <div class=\"col sm-9\">\n                    <input \n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"Ingrese su Nickname\"\n                            formControlName=\"username\">\n                    \n                    <span class=\"form-text text-danger\"\n                        *ngIf=\"campoNoValido('username')\">\n                        El Nickname no es valido\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"row mb-3\">\n                <label for=\"\" class=\"col-sm-3 col-form-label\">Password</label>\n                <div class=\"col sm 9\">\n                    <input \n                        type=\"password\"\n                        class=\"form-control\"\n                        placeholder=\"Ingrese la contraseña\"\n                        formControlName=\"password\">\n\n                    <span class=\"form-text text-danger\"\n                        *ngIf=\"campoNoValido('password')\">\n                        La contrseña debe contener al menos 6 caracteres\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"row mb-3\">\n                <label for=\"\" class=\"col-sm-3 col-form-label\">Confirmar Password</label>\n                <div class=\"col sm-9\">\n                    <input \n                        type=\"password\"\n                        class=\"form-control\"\n                        placeholder=\"Confirme la contrseña\"\n                        formControlName=\"confirm_password\">\n\n                    <span class=\"form-text text-danger\"\n                        *ngIf=\"campoNoValido('confirm_password')\">\n                        Las contraseñas no coinciden\n                    </span>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col\">\n                    <button class=\"btn btn-primary float-end\"\n                        type=\"submit\"\n                        [disabled]=\"miFormulario.pending\">\n                        Crear\n                    </button>\n                </div>\n            </div>\n\n        </form>\n    </div>\n</div>\n\n<h2>FormErrors:</h2>\n<pre>{{miFormulario.errors | json}}</pre>\n\n<h2>Form Pending:</h2> \n<pre>{{miFormulario.pending}}</pre>\n\n<h2>FormValid: {{miFormulario.valid}}</h2>\n<h2>Nombre: {{miFormulario.controls['nombre'].errors | json}}</h2>\n\n<h2>FormValid: {{miFormulario.valid}}</h2>\n<h2>Email: {{miFormulario.controls['email'].errors | json}}</h2>\n\n<h2>FormValid: {{miFormulario.valid}}</h2>\n<h2>NickName: {{miFormulario.controls['username'].errors | json}}</h2>"]},"metadata":{},"sourceType":"module"}